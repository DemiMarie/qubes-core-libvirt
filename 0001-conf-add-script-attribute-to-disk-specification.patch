From dcbd8a147e77bb8d830ee964303bcf766a1dea44 Mon Sep 17 00:00:00 2001
From: Marek Marczykowski <marmarek@invisiblethingslab.com>
Date: Fri, 5 Apr 2013 01:37:29 +0200
Subject: [PATCH] conf: add 'script' attribute to disk specification
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Script to be called to prepare custom device for domain. Done with Xen
in mind, it maps to libxl_device_disk.script.

XML configuration would be:
<disk type='block' device='disk'>
    <source dev='/dev/mapper/custom-device'/>
    <script path='/script/to/setup/custom-device'/>
    <target dev='xvdc'/>
</disk>

Signed-off-by: Marek Marczykowski-GÃ³recki <marmarek@invisiblethingslab.com>
---
 docs/schemas/domaincommon.rng | 8 ++++++++
 src/conf/domain_conf.c        | 7 +++++++
 src/conf/domain_conf.h        | 1 +
 3 files changed, 16 insertions(+)

diff --git a/docs/schemas/domaincommon.rng b/docs/schemas/domaincommon.rng
index 8cbbd7e6e9..d0a7a8d055 100644
--- a/docs/schemas/domaincommon.rng
+++ b/docs/schemas/domaincommon.rng
@@ -1388,6 +1388,14 @@
           <empty/>
         </element>
       </optional>
+      <optional>
+        <element name="script">
+          <attribute name="path">
+            <ref name="filePath"/>
+          </attribute>
+          <empty/>
+        </element>
+      </optional>
       <optional>
         <element name="readonly">
           <empty/>
diff --git a/src/conf/domain_conf.c b/src/conf/domain_conf.c
index 386b04b5b8..0e9db39f83 100644
--- a/src/conf/domain_conf.c
+++ b/src/conf/domain_conf.c
@@ -2197,6 +2197,7 @@ virDomainDiskDefFree(virDomainDiskDefPtr def)
     VIR_FREE(def->domain_name);
     VIR_FREE(def->blkdeviotune.group_name);
     VIR_FREE(def->virtio);
+    VIR_FREE(def->script);
     virDomainDeviceInfoClear(&def->info);
     virObjectUnref(def->privateData);
 
@@ -10448,6 +10449,7 @@ virDomainDiskDefParseXML(virDomainXMLOptionPtr xmlopt,
     g_autofree char *vendor = NULL;
     g_autofree char *product = NULL;
     g_autofree char *domain_name = NULL;
+    g_autofree char *script = NULL;
 
     if (!(def = virDomainDiskDefNew(xmlopt)))
         return NULL;
@@ -10524,6 +10526,9 @@ virDomainDiskDefParseXML(virDomainXMLOptionPtr xmlopt,
         } else if (virXMLNodeNameEqual(cur, "geometry")) {
             if (virDomainDiskDefGeometryParse(def, cur) < 0)
                 goto error;
+        } else if (!script &&
+                   virXMLNodeNameEqual(cur, "script")) {
+            script = virXMLPropString(cur, "path");
         } else if (virXMLNodeNameEqual(cur, "blockio")) {
             logical_block_size =
                 virXMLPropString(cur, "logical_block_size");
@@ -10803,6 +10808,7 @@ virDomainDiskDefParseXML(virDomainXMLOptionPtr xmlopt,
         def->src->encryption = g_steal_pointer(&encryption);
     }
     def->domain_name = g_steal_pointer(&domain_name);
+    def->script = g_steal_pointer(&script);
     def->serial = g_steal_pointer(&serial);
     def->wwn = g_steal_pointer(&wwn);
     def->vendor = g_steal_pointer(&vendor);
@@ -25557,6 +25563,7 @@ virDomainDiskDefFormat(virBufferPtr buf,
         return -1;
 
     virBufferEscapeString(buf, "<backenddomain name='%s'/>\n", def->domain_name);
+    virBufferEscapeString(buf, "<script path='%s'/>\n", def->script);
 
     virDomainDiskGeometryDefFormat(buf, def);
     virDomainDiskBlockIoDefFormat(buf, def);
diff --git a/src/conf/domain_conf.h b/src/conf/domain_conf.h
index 6e9da298b4..3f888ba556 100644
--- a/src/conf/domain_conf.h
+++ b/src/conf/domain_conf.h
@@ -579,6 +579,7 @@ struct _virDomainDiskDef {
     unsigned int queues;
     int model; /* enum virDomainDiskModel */
     virDomainVirtioOptionsPtr virtio;
+    char *script;
 
     bool diskElementAuth;
     bool diskElementEnc;
-- 
2.35.1

