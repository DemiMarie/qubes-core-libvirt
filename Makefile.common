#
# Common Makefile for building RPMs
#

WORKDIR := $(shell pwd)
SPECDIR ?= $(WORKDIR)
SRCRPMDIR ?= $(WORKDIR)/srpm
BUILDDIR ?= $(WORKDIR)
RPMDIR ?= $(WORKDIR)/rpm
SOURCEDIR := $(WORKDIR)
VERSION := $(or $(file <./version),$(error cannot get version))
EPOCH := $(or $(file <./epoch),$(error cannot get epoch))

RPM_DEFINES := --define "_sourcedir $(SOURCEDIR)" \
		--define "_specdir $(SPECDIR)" \
		--define "_builddir $(BUILDDIR)" \
		--define "_srcrpmdir $(SRCRPMDIR)" \
		--define "_rpmdir $(RPMDIR)" \
		--define "version $(VERSION)" \
		--define "epoch $(EPOCH)" \
		--define "_default_patch_fuzz 3"

ifndef NAME
$(error "You can not run this Makefile without having NAME defined")
endif
ifeq ($(FETCH_CMD),)
$(error "You can not run this Makefile without having FETCH_CMD defined")
endif

all: help

URLS := \
		https://libvirt.org/sources/libvirt-$(VERSION).tar.xz.asc \
		https://libvirt.org/sources/python/libvirt-python-$(VERSION).tar.gz.asc

ALL_FILES := $(notdir $(URLS:%.asc=%)) $(notdir $(filter %.asc, $(URLS)))
ALL_URLS := $(URLS:%.asc=%) $(filter %.asc, $(URLS))

DISTFILES_MIRROR ?=

ifneq ($(DISTFILES_MIRROR),)
URLS := $(addprefix $(DISTFILES_MIRROR)/,$(ALL_FILES))
endif

get-sources: $(ALL_FILES)

$(filter %.asc,$(ALL_FILES)):
	$(FETCH_CMD) $@ $(filter %$@,$(ALL_URLS))
UNTRUSTED_SUFF := .UNTRUSTED
%: %.asc import-keys
	$(FETCH_CMD) $@$(UNTRUSTED_SUFF) -- $(filter %$@,$(ALL_URLS))
	gpgv --keyring core-libvirt-trustedkeys.gpg $< $@$(UNTRUSTED_SUFF) 2>/dev/null || \
		{ echo "Wrong signature on $@$(UNTRUSTED_SUFF)!"; exit 1; }
	mv $@$(UNTRUSTED_SUFF) $@

.PHONY: import-keys
import-keys:
	@if [ -n "$$GNUPGHOME" ]; then rm -f "$$GNUPGHOME/core-libvirt-trustedkeys.gpg"; fi
	@gpg --no-auto-check-trustdb --no-default-keyring --keyring core-libvirt-trustedkeys.gpg -q --import ./*-key.asc

.PHONY: verify-sources

verify-sources:
	@true

.PHONY: clean-sources
clean-sources:
ifneq ($(ALL_FILES), None)
	-rm $(ALL_FILES)
endif


#RPM := rpmbuild --buildroot=/dev/shm/buildroot/
RPM := rpmbuild 

RPM_WITH_DIRS = $(RPM) $(RPM_DEFINES)

rpms: get-sources $(SPECFILE)
	$(RPM_WITH_DIRS) -bb $(SPECFILE)

srpm: get-sources $(SPECFILE)
	$(RPM_WITH_DIRS) -bs $(SPECFILE)

verrel:
	@echo $(NAME)-$(VERSION)-$(RELEASE)

# mop up, printing out exactly what was mopped.

.PHONY : clean
clean ::
	@echo "Running the %clean script of the rpmbuild..."
	$(RPM_WITH_DIRS) --clean --nodeps $(SPECFILE)

help:
	@echo "Usage: make <target>"
	@echo
	@echo "prep             Just do the prep"	
	@echo "rpms             Build rpms"
	@echo "srpm             Create an srpm"
	@echo

