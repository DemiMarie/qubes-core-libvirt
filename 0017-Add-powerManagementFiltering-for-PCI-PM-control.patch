From a566f1ffca0df1cde5da63bc97a260ea0ef3f188 Mon Sep 17 00:00:00 2001
From: Simon Gaiser <simon@invisiblethingslab.com>
Date: Mon, 12 Feb 2024 10:53:55 +0100
Subject: [PATCH] Add powerManagementFiltering for PCI PM control
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

TODO: doc, non-libxl
Signed-off-by: Marek Marczykowski-GÃ³recki <marmarek@invisiblethingslab.com>
---
 src/conf/domain_conf.c            |  9 +++++++++
 src/conf/domain_conf.h            |  1 +
 src/conf/schemas/domaincommon.rng |  5 +++++
 src/libxl/libxl_conf.c            |  1 +
 src/libxl/xen_common.c            | 29 +++++++++++++++++++++++++++--
 5 files changed, 43 insertions(+), 2 deletions(-)

diff --git a/src/conf/domain_conf.c b/src/conf/domain_conf.c
index d9efdeef11..2e7cfb12fb 100644
--- a/src/conf/domain_conf.c
+++ b/src/conf/domain_conf.c
@@ -5853,6 +5853,11 @@ virDomainHostdevSubsysPCIDefParseXML(xmlNodePtr node,
                                &def->writeFiltering) < 0)
         return -1;
 
+    if (virXMLPropTristateBool(node, "powerManagementFiltering",
+                               VIR_XML_PROP_NONE,
+                               &def->powerManagementFiltering) < 0)
+        return -1;
+
     if ((address = virXPathNode("./address", ctxt)) &&
         virPCIDeviceAddressParseXML(address, &def->source.subsys.u.pci.addr) < 0)
         return -1;
@@ -23685,6 +23690,10 @@ virDomainHostdevDefFormatSubsysPCI(virBuffer *buf,
             virBufferAsprintf(&sourceAttrBuf, " writeFiltering='%s'",
                               virTristateBoolTypeToString(def->writeFiltering));
 
+    if (def->powerManagementFiltering != VIR_TRISTATE_BOOL_ABSENT)
+            virBufferAsprintf(&sourceAttrBuf, " powerManagementFiltering='%s'",
+                              virTristateBoolTypeToString(def->powerManagementFiltering));
+
     virPCIDeviceAddressFormat(&sourceChildBuf, pcisrc->addr, includeTypeInAddr);
 
     if (pcisrc->origstates &&
diff --git a/src/conf/domain_conf.h b/src/conf/domain_conf.h
index 1ee3149603..2ea41bdc39 100644
--- a/src/conf/domain_conf.h
+++ b/src/conf/domain_conf.h
@@ -368,6 +368,7 @@ struct _virDomainHostdevDef {
     bool readonly;
     bool shareable;
     virTristateBool writeFiltering;
+    virTristateBool powerManagementFiltering;
     bool nostrictreset;
     union {
         virDomainHostdevSubsys subsys;
diff --git a/src/conf/schemas/domaincommon.rng b/src/conf/schemas/domaincommon.rng
index 1f0f942065..e8c5f9e065 100644
--- a/src/conf/schemas/domaincommon.rng
+++ b/src/conf/schemas/domaincommon.rng
@@ -6436,6 +6436,11 @@
             <ref name="virYesNo"/>
           </attribute>
         </optional>
+        <optional>
+          <attribute name="powerManagementFiltering">
+            <ref name="virYesNo"/>
+          </attribute>
+        </optional>
         <element name="address">
           <ref name="pciaddress"/>
         </element>
diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
index 0fb48e7995..96d6e68472 100644
--- a/src/libxl/libxl_conf.c
+++ b/src/libxl/libxl_conf.c
@@ -2335,6 +2335,7 @@ libxlMakePCI(virDomainHostdevDef *hostdev, libxl_device_pci *pcidev)
     pcidev->dev = pcisrc->addr.slot;
     pcidev->func = pcisrc->addr.function;
     pcidev->permissive = hostdev->writeFiltering == VIR_TRISTATE_BOOL_NO;
+    pcidev->power_mgmt = hostdev->powerManagementFiltering == VIR_TRISTATE_BOOL_NO;
     /* there is no LIBXL_HAVE_xxx for this field... */
     if (hostdev->nostrictreset)
         pcidev->rdm_policy = LIBXL_RDM_RESERVE_POLICY_RELAXED;
diff --git a/src/libxl/xen_common.c b/src/libxl/xen_common.c
index 3a64f565f7..28dde9056f 100644
--- a/src/libxl/xen_common.c
+++ b/src/libxl/xen_common.c
@@ -382,6 +382,7 @@ xenParsePCI(char *entry)
     int slot;
     int func;
     virTristateBool filtered = VIR_TRISTATE_BOOL_ABSENT;
+    virTristateBool powerManagementFiltering = VIR_TRISTATE_BOOL_ABSENT;
 
     /* pci=['00:1b.0','0000:00:13.0,permissive=1'] */
     if (!(tokens = g_strsplit(entry, ":", 3)))
@@ -442,6 +443,14 @@ xenParsePCI(char *entry)
                     return NULL;
                 filtered = intval ? VIR_TRISTATE_BOOL_NO : VIR_TRISTATE_BOOL_YES;
             }
+            if (STREQ(options[i], "power_mgmt")) {
+                int intval;
+
+                /* xl.cfg(5) specifies false as 0 and true as any other numeric value */
+                if (virStrToLong_i(val, NULL, 10, &intval) < 0)
+                    return NULL;
+                powerManagementFiltering = intval ? VIR_TRISTATE_BOOL_NO : VIR_TRISTATE_BOOL_YES;
+            }
         }
     }
 
@@ -450,6 +459,7 @@ xenParsePCI(char *entry)
 
     hostdev->managed = false;
     hostdev->writeFiltering = filtered;
+    hostdev->powerManagementFiltering = powerManagementFiltering;
     hostdev->source.subsys.type = VIR_DOMAIN_HOSTDEV_SUBSYS_TYPE_PCI;
     hostdev->source.subsys.u.pci.addr.domain = domain;
     hostdev->source.subsys.u.pci.addr.bus = bus;
@@ -1761,6 +1771,7 @@ xenFormatPCI(virConf *conf, virDomainDef *def)
             virConfValue *tmp;
             char *buf;
             const char *permissive_str = NULL;
+            const char *power_mgmt_str = NULL;
 
             switch (def->hostdevs[i]->writeFiltering) {
                 case VIR_TRISTATE_BOOL_YES:
@@ -1775,12 +1786,26 @@ xenFormatPCI(virConf *conf, virDomainDef *def)
                     break;
             }
 
-            buf = g_strdup_printf("%04x:%02x:%02x.%x%s",
+            switch (def->hostdevs[i]->powerManagementFiltering) {
+                case VIR_TRISTATE_BOOL_YES:
+                    power_mgmt_str = ",power_mgmt=0";
+                    break;
+                case VIR_TRISTATE_BOOL_NO:
+                    power_mgmt_str = ",power_mgmt=1";
+                    break;
+                case VIR_TRISTATE_BOOL_ABSENT:
+                case VIR_TRISTATE_BOOL_LAST:
+                    power_mgmt_str = "";
+                    break;
+            }
+
+            buf = g_strdup_printf("%04x:%02x:%02x.%x%s%s",
                                   def->hostdevs[i]->source.subsys.u.pci.addr.domain,
                                   def->hostdevs[i]->source.subsys.u.pci.addr.bus,
                                   def->hostdevs[i]->source.subsys.u.pci.addr.slot,
                                   def->hostdevs[i]->source.subsys.u.pci.addr.function,
-                                  permissive_str);
+                                  permissive_str,
+                                  power_mgmt_str);
 
 
             val = g_new0(virConfValue, 1);
-- 
2.45.2

