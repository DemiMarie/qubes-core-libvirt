From 36bfeeb93888ddfe3b485de1782a129fd7695c56 Mon Sep 17 00:00:00 2001
From: Marek Marczykowski <marmarek@invisiblethingslab.com>
Date: Tue, 16 Apr 2013 03:46:32 +0200
Subject: [PATCH 11/16] libxl: prevent attaching multiple netdevs with the same
 MAC
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Organization: Invisible Things Lab
Cc: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>

It will not be possible to detach such device later. Also improve
logging in such cases.

Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
---
 src/libxl/libxl_driver.c | 41 +++++++++++++++++++++++++++++++++++++++--
 1 file changed, 39 insertions(+), 2 deletions(-)

diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index 19ccfe5..7539d33 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -2794,6 +2794,7 @@ libxlDomainAttachNetDevice(libxlDriverPrivatePtr driver,
     int actualType;
     libxl_device_nic nic;
     int ret = -1;
+    char mac[VIR_MAC_STRING_BUFLEN];
 
     /* preallocate new slot for device */
     if (VIR_REALLOC_N(vm->def->nets, vm->def->nnets + 1) < 0)
@@ -2808,6 +2809,14 @@ libxlDomainAttachNetDevice(libxlDriverPrivatePtr driver,
 
     actualType = virDomainNetGetActualType(net);
 
+    /* -2 means "multiple matches" so then fail also */
+    if (virDomainNetFindIdx(vm->def, net) != -1) {
+        virReportError(VIR_ERR_OPERATION_FAILED,
+                _("device matching mac address %s already exists"),
+                virMacAddrFormat(&net->mac, mac));
+        return -1;
+    }
+
     if (actualType == VIR_DOMAIN_NET_TYPE_HOSTDEV) {
         /* This is really a "smart hostdev", so it should be attached
          * as a hostdev (the hostdev code will reach over into the
@@ -2886,6 +2895,7 @@ libxlDomainAttachDeviceConfig(virDomainDefPtr vmdef, virDomainDeviceDefPtr dev)
     virDomainHostdevDefPtr hostdev;
     virDomainHostdevDefPtr found;
     virDomainHostdevSubsysPCIPtr pcisrc;
+    char mac[VIR_MAC_STRING_BUFLEN];
 
     switch (dev->type) {
         case VIR_DOMAIN_DEVICE_DISK:
@@ -2903,6 +2913,12 @@ libxlDomainAttachDeviceConfig(virDomainDefPtr vmdef, virDomainDeviceDefPtr dev)
 
         case VIR_DOMAIN_DEVICE_NET:
             net = dev->data.net;
+            if (virDomainNetFindIdx(vmdef, net) >= 0) {
+                virReportError(VIR_ERR_INVALID_ARG,
+                               _("network device with mac %s already exists."),
+                               virMacAddrFormat(&net->mac, mac));
+                return -1;
+            }
             if (virDomainNetInsert(vmdef, net))
                 return -1;
             dev->data.net = NULL;
@@ -3067,8 +3083,18 @@ libxlDomainDetachNetDevice(libxlDriverPrivatePtr driver,
     char mac[VIR_MAC_STRING_BUFLEN];
     int ret = -1;
 
-    if ((detachidx = virDomainNetFindIdx(vm->def, net)) < 0)
+    if ((detachidx = virDomainNetFindIdx(vm->def, net)) < 0) {
+        if (detachidx == -2) {
+            virReportError(VIR_ERR_OPERATION_FAILED,
+                    _("multiple devices matching mac address %s found"),
+                    virMacAddrFormat(&net->mac, mac));
+        } else {
+            virReportError(VIR_ERR_OPERATION_FAILED,
+                    _("network device %s not found"),
+                    virMacAddrFormat(&net->mac, mac));
+        }
         return -1;
+    }
 
     detach = vm->def->nets[detachidx];
 
@@ -3143,6 +3169,7 @@ libxlDomainDetachDeviceConfig(virDomainDefPtr vmdef, virDomainDeviceDefPtr dev)
     virDomainHostdevDefPtr hostdev, det_hostdev;
     virDomainNetDefPtr net;
     int idx;
+    char mac[VIR_MAC_STRING_BUFLEN];
 
     switch (dev->type) {
         case VIR_DOMAIN_DEVICE_DISK:
@@ -3157,8 +3184,18 @@ libxlDomainDetachDeviceConfig(virDomainDefPtr vmdef, virDomainDeviceDefPtr dev)
 
         case VIR_DOMAIN_DEVICE_NET:
             net = dev->data.net;
-            if ((idx = virDomainNetFindIdx(vmdef, net)) < 0)
+            if ((idx = virDomainNetFindIdx(vmdef, net)) < 0) {
+                if (idx == -2) {
+                    virReportError(VIR_ERR_OPERATION_FAILED,
+                            _("multiple devices matching mac address %s found"),
+                            virMacAddrFormat(&dev->data.net->mac, mac));
+                } else {
+                    virReportError(VIR_ERR_OPERATION_FAILED,
+                            _("network device %s not found"),
+                            virMacAddrFormat(&dev->data.net->mac, mac));
+                }
                 return -1;
+            }
 
             /* this is guaranteed to succeed */
             virDomainNetDefFree(virDomainNetRemove(vmdef, idx));
-- 
1.8.3.1

