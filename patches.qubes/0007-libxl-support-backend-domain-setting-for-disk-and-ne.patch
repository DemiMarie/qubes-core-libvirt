From 283ace85d6287c031599fadfcbf0af334669058a Mon Sep 17 00:00:00 2001
From: Marek Marczykowski <marmarek@invisiblethingslab.com>
Date: Fri, 5 Apr 2013 01:42:17 +0200
Subject: [PATCH 07/15] libxl: support backend domain setting for disk and net
 devices
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Organization: Invisible Things Lab
Cc: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>

This implement handling of <domain name=''/> parameter introduced in
previous patch.

Lookup on domain name (to get domain ID) requires libxlDriverPrivate
object, so it must be passed down to libxlMakeDisk and libxlMakeNet from
top level callers.

Changes in v2:
 - rebase on 1.0.6+
 - fix indentation
 - make libxl_name_to_domid switch more defensive

Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
---
 src/libxl/libxl_conf.c   | 76 +++++++++++++++++++++++++++++++++++++++++++-----
 src/libxl/libxl_conf.h   |  4 +--
 src/libxl/libxl_driver.c | 51 +++++++++++++++++++-------------
 3 files changed, 101 insertions(+), 30 deletions(-)

diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
index 118ebb3..5718241 100644
--- a/src/libxl/libxl_conf.c
+++ b/src/libxl/libxl_conf.c
@@ -457,7 +457,9 @@ error:
 }
 
 int
-libxlMakeDisk(virDomainDiskDefPtr l_disk, libxl_device_disk *x_disk)
+libxlMakeDisk(libxlDriverPrivatePtr driver,
+              virDomainDiskDefPtr l_disk,
+              libxl_device_disk *x_disk)
 {
     libxl_device_disk_init(x_disk);
 
@@ -577,11 +579,39 @@ libxlMakeDisk(virDomainDiskDefPtr l_disk, libxl_device_disk *x_disk)
         return -1;
     }
 
+    if (l_disk->domain_name) {
+        uint32_t domid;
+        /* Do not use virDomainObjListFindByName as it causes deadlock here -
+         * we already have lock on this domain object, but
+         * virDomainObjListFindByName will try to take it again.
+         */
+        switch (libxl_name_to_domid(driver->ctx, l_disk->domain_name, &domid)) {
+            case 0:
+                x_disk->backend_domid = domid;
+                break;
+            case ERROR_INVAL:
+                virReportError(VIR_ERR_XML_DETAIL,
+                        _("Backend domain '%s' does not exists for disk '%s'"),
+                        l_disk->domain_name, l_disk->dst);
+                return -1;
+            case ERROR_NOMEM:
+                virReportOOMError();
+                return -1;
+            default:
+                virReportError(VIR_ERR_INTERNAL_ERROR,
+                        _("Failed to get ID of domain '%s'"),
+                        l_disk->domain_name);
+                return -1;
+        }
+    }
+
     return 0;
 }
 
 static int
-libxlMakeDiskList(virDomainDefPtr def, libxl_domain_config *d_config)
+libxlMakeDiskList(libxlDriverPrivatePtr driver,
+                  virDomainDefPtr def,
+                  libxl_domain_config *d_config)
 {
     virDomainDiskDefPtr *l_disks = def->disks;
     int ndisks = def->ndisks;
@@ -592,7 +622,7 @@ libxlMakeDiskList(virDomainDefPtr def, libxl_domain_config *d_config)
         return -1;
 
     for (i = 0; i < ndisks; i++) {
-        if (libxlMakeDisk(l_disks[i], &x_disks[i]) < 0)
+        if (libxlMakeDisk(driver, l_disks[i], &x_disks[i]) < 0)
             goto error;
     }
 
@@ -609,7 +639,9 @@ error:
 }
 
 int
-libxlMakeNic(virDomainNetDefPtr l_nic, libxl_device_nic *x_nic)
+libxlMakeNic(libxlDriverPrivatePtr driver,
+             virDomainNetDefPtr l_nic,
+             libxl_device_nic *x_nic)
 {
     /* TODO: Where is mtu stored?
      *
@@ -647,11 +679,39 @@ libxlMakeNic(virDomainNetDefPtr l_nic, libxl_device_nic *x_nic)
             return -1;
     }
 
+    if (l_nic->domain_name) {
+        uint32_t domid;
+        /* Do not use virDomainObjListFindByName as it causes deadlock here -
+         * we already have lock on this domain object, but
+         * virDomainObjListFindByName will try to take it again.
+         */
+        switch (libxl_name_to_domid(driver->ctx, l_nic->domain_name, &domid)) {
+            case 0:
+                x_nic->backend_domid = domid;
+                break;
+            case ERROR_INVAL:
+                virReportError(VIR_ERR_XML_DETAIL,
+                        _("Backend domain '%s' does not exists for nic '%s'"),
+                        l_nic->domain_name, l_nic->ifname);
+                return -1;
+            case ERROR_NOMEM:
+                virReportOOMError();
+                return -1;
+            default:
+                virReportError(VIR_ERR_INTERNAL_ERROR,
+                        _("Failed to get ID of domain '%s'"),
+                        l_nic->domain_name);
+                return -1;
+        }
+    }
+
     return 0;
 }
 
 static int
-libxlMakeNicList(virDomainDefPtr def,  libxl_domain_config *d_config)
+libxlMakeNicList(libxlDriverPrivatePtr driver,
+                 virDomainDefPtr def,
+                 libxl_domain_config *d_config)
 {
     virDomainNetDefPtr *l_nics = def->nets;
     int nnics = def->nnets;
@@ -662,7 +722,7 @@ libxlMakeNicList(virDomainDefPtr def,  libxl_domain_config *d_config)
         return -1;
 
     for (i = 0; i < nnics; i++) {
-        if (libxlMakeNic(l_nics[i], &x_nics[i]))
+        if (libxlMakeNic(driver, l_nics[i], &x_nics[i]))
             goto error;
     }
 
@@ -889,11 +949,11 @@ libxlBuildDomainConfig(libxlDriverPrivatePtr driver,
         return -1;
     }
 
-    if (libxlMakeDiskList(def, d_config) < 0) {
+    if (libxlMakeDiskList(driver, def, d_config) < 0) {
         return -1;
     }
 
-    if (libxlMakeNicList(def, d_config) < 0) {
+    if (libxlMakeNicList(driver, def, d_config) < 0) {
         return -1;
     }
 
diff --git a/src/libxl/libxl_conf.h b/src/libxl/libxl_conf.h
index d504b7e..d1e448b 100644
--- a/src/libxl/libxl_conf.h
+++ b/src/libxl/libxl_conf.h
@@ -124,9 +124,9 @@ virCapsPtr
 libxlMakeCapabilities(libxl_ctx *ctx);
 
 int
-libxlMakeDisk(virDomainDiskDefPtr l_dev, libxl_device_disk *x_dev);
+libxlMakeDisk(libxlDriverPrivatePtr driver, virDomainDiskDefPtr l_dev, libxl_device_disk *x_dev);
 int
-libxlMakeNic(virDomainNetDefPtr l_nic, libxl_device_nic *x_nic);
+libxlMakeNic(libxlDriverPrivatePtr driver, virDomainNetDefPtr l_nic, libxl_device_nic *x_nic);
 int
 libxlMakeVfb(libxlDriverPrivatePtr driver,
              virDomainGraphicsDefPtr l_vfb, libxl_device_vfb *x_vfb);
diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index b09b4d4..6ffd88d 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -3461,8 +3461,10 @@ libxlDomainUndefine(virDomainPtr dom)
 }
 
 static int
-libxlDomainChangeEjectableMedia(libxlDomainObjPrivatePtr priv,
-                                virDomainObjPtr vm, virDomainDiskDefPtr disk)
+libxlDomainChangeEjectableMedia(libxlDriverPrivatePtr driver,
+                                libxlDomainObjPrivatePtr priv,
+                                virDomainObjPtr vm,
+                                virDomainDiskDefPtr disk)
 {
     virDomainDiskDefPtr origdisk = NULL;
     libxl_device_disk x_disk;
@@ -3491,7 +3493,7 @@ libxlDomainChangeEjectableMedia(libxlDomainObjPrivatePtr priv,
         return -1;
     }
 
-    if (libxlMakeDisk(disk, &x_disk) < 0)
+    if (libxlMakeDisk(driver, disk, &x_disk) < 0)
         goto cleanup;
 
     if ((ret = libxl_cdrom_insert(priv->ctx, vm->def->id, &x_disk, NULL)) < 0) {
@@ -3516,8 +3518,10 @@ cleanup:
 }
 
 static int
-libxlDomainAttachDeviceDiskLive(libxlDomainObjPrivatePtr priv,
-                                virDomainObjPtr vm, virDomainDeviceDefPtr dev)
+libxlDomainAttachDeviceDiskLive(libxlDriverPrivatePtr driver,
+                                libxlDomainObjPrivatePtr priv,
+                                virDomainObjPtr vm,
+                                virDomainDeviceDefPtr dev)
 {
     virDomainDiskDefPtr l_disk = dev->data.disk;
     libxl_device_disk x_disk;
@@ -3525,7 +3529,7 @@ libxlDomainAttachDeviceDiskLive(libxlDomainObjPrivatePtr priv,
 
     switch (l_disk->device)  {
         case VIR_DOMAIN_DISK_DEVICE_CDROM:
-            ret = libxlDomainChangeEjectableMedia(priv, vm, l_disk);
+            ret = libxlDomainChangeEjectableMedia(driver, priv, vm, l_disk);
             break;
         case VIR_DOMAIN_DISK_DEVICE_DISK:
             if (l_disk->bus == VIR_DOMAIN_DISK_BUS_XEN) {
@@ -3544,7 +3548,7 @@ libxlDomainAttachDeviceDiskLive(libxlDomainObjPrivatePtr priv,
                 if (VIR_REALLOC_N(vm->def->disks, vm->def->ndisks+1) < 0)
                     goto cleanup;
 
-                if (libxlMakeDisk(l_disk, &x_disk) < 0)
+                if (libxlMakeDisk(driver, l_disk, &x_disk) < 0)
                     goto cleanup;
 
                 if ((ret = libxl_device_disk_add(priv->ctx, vm->def->id,
@@ -3575,8 +3579,10 @@ cleanup:
 }
 
 static int
-libxlDomainDetachDeviceDiskLive(libxlDomainObjPrivatePtr priv,
-                                virDomainObjPtr vm, virDomainDeviceDefPtr dev)
+libxlDomainDetachDeviceDiskLive(libxlDriverPrivatePtr driver,
+                                libxlDomainObjPrivatePtr priv,
+                                virDomainObjPtr vm,
+                                virDomainDeviceDefPtr dev)
 {
     virDomainDiskDefPtr l_disk = NULL;
     libxl_device_disk x_disk;
@@ -3597,7 +3603,7 @@ libxlDomainDetachDeviceDiskLive(libxlDomainObjPrivatePtr priv,
 
                 l_disk = vm->def->disks[idx];
 
-                if (libxlMakeDisk(l_disk, &x_disk) < 0)
+                if (libxlMakeDisk(driver, l_disk, &x_disk) < 0)
                     goto cleanup;
 
                 if ((ret = libxl_device_disk_remove(priv->ctx, vm->def->id,
@@ -3629,14 +3635,15 @@ cleanup:
 }
 
 static int
-libxlDomainAttachDeviceLive(libxlDomainObjPrivatePtr priv, virDomainObjPtr vm,
+libxlDomainAttachDeviceLive(libxlDriverPrivatePtr driver,
+                            libxlDomainObjPrivatePtr priv, virDomainObjPtr vm,
                             virDomainDeviceDefPtr dev)
 {
     int ret = -1;
 
     switch (dev->type) {
         case VIR_DOMAIN_DEVICE_DISK:
-            ret = libxlDomainAttachDeviceDiskLive(priv, vm, dev);
+            ret = libxlDomainAttachDeviceDiskLive(driver, priv, vm, dev);
             if (!ret)
                 dev->data.disk = NULL;
             break;
@@ -3679,14 +3686,16 @@ libxlDomainAttachDeviceConfig(virDomainDefPtr vmdef, virDomainDeviceDefPtr dev)
 }
 
 static int
-libxlDomainDetachDeviceLive(libxlDomainObjPrivatePtr priv, virDomainObjPtr vm,
+libxlDomainDetachDeviceLive(libxlDriverPrivatePtr driver,
+                            libxlDomainObjPrivatePtr priv,
+                            virDomainObjPtr vm,
                             virDomainDeviceDefPtr dev)
 {
     int ret = -1;
 
     switch (dev->type) {
         case VIR_DOMAIN_DEVICE_DISK:
-            ret = libxlDomainDetachDeviceDiskLive(priv, vm, dev);
+            ret = libxlDomainDetachDeviceDiskLive(driver, priv, vm, dev);
             break;
 
         default:
@@ -3726,8 +3735,10 @@ libxlDomainDetachDeviceConfig(virDomainDefPtr vmdef, virDomainDeviceDefPtr dev)
 }
 
 static int
-libxlDomainUpdateDeviceLive(libxlDomainObjPrivatePtr priv,
-                            virDomainObjPtr vm, virDomainDeviceDefPtr dev)
+libxlDomainUpdateDeviceLive(libxlDriverPrivatePtr driver,
+                            libxlDomainObjPrivatePtr priv,
+                            virDomainObjPtr vm,
+                            virDomainDeviceDefPtr dev)
 {
     virDomainDiskDefPtr disk;
     int ret = -1;
@@ -3737,7 +3748,7 @@ libxlDomainUpdateDeviceLive(libxlDomainObjPrivatePtr priv,
             disk = dev->data.disk;
             switch (disk->device) {
                 case VIR_DOMAIN_DISK_DEVICE_CDROM:
-                    ret = libxlDomainChangeEjectableMedia(priv, vm, disk);
+                    ret = libxlDomainChangeEjectableMedia(driver, priv, vm, disk);
                     if (ret == 0)
                         dev->data.disk = NULL;
                     break;
@@ -3877,7 +3888,7 @@ libxlDomainAttachDeviceFlags(virDomainPtr dom, const char *xml,
                                             VIR_DOMAIN_XML_INACTIVE)))
             goto cleanup;
 
-        if ((ret = libxlDomainAttachDeviceLive(priv, vm, dev)) < 0)
+        if ((ret = libxlDomainAttachDeviceLive(driver, priv, vm, dev)) < 0)
             goto cleanup;
 
         /*
@@ -3985,7 +3996,7 @@ libxlDomainDetachDeviceFlags(virDomainPtr dom, const char *xml,
                                             VIR_DOMAIN_XML_INACTIVE)))
             goto cleanup;
 
-        if ((ret = libxlDomainDetachDeviceLive(priv, vm, dev)) < 0)
+        if ((ret = libxlDomainDetachDeviceLive(driver, priv, vm, dev)) < 0)
             goto cleanup;
 
         /*
@@ -4093,7 +4104,7 @@ libxlDomainUpdateDeviceFlags(virDomainPtr dom, const char *xml,
                                             VIR_DOMAIN_XML_INACTIVE)))
             goto cleanup;
 
-        if ((ret = libxlDomainUpdateDeviceLive(priv, vm, dev)) < 0)
+        if ((ret = libxlDomainUpdateDeviceLive(driver, priv, vm, dev)) < 0)
             goto cleanup;
 
         /*
-- 
1.8.1.4

