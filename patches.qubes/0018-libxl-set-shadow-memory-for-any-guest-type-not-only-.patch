From 5bbc06487b4368777d93d7b6ed4645a6efec9541 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Sat, 30 Jul 2016 00:36:08 +0200
Subject: [PATCH 18/18] libxl: set shadow memory for any guest type, not only
 HVM
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Organization: Invisible Things Lab
Cc: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>

Otherwise starting PVH guest will result in "arch_setup_bootlate:
mapping shared_info failed (pfn=..., rc=-1, errno: 12): Internal error".

After this change the behaviour is the same as in `xl`.

Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
---
 src/libxl/libxl_conf.c | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
index c91a495..c563d1a 100644
--- a/src/libxl/libxl_conf.c
+++ b/src/libxl/libxl_conf.c
@@ -511,16 +511,6 @@ libxlMakeDomBuildInfo(virDomainDefPtr def,
                 }
             }
         }
-
-        /*
-         * The following comment and calculation were taken directly from
-         * libxenlight's internal function libxl_get_required_shadow_memory():
-         *
-         * 256 pages (1MB) per vcpu, plus 1 page per MiB of RAM for the P2M map,
-         * plus 1 page per MiB of RAM to shadow the resident processes.
-         */
-        b_info->shadow_memkb = 4 * (256 * libxl_bitmap_count_set(&b_info->avail_vcpus) +
-                                    2 * (b_info->max_memkb / 1024));
     } else {
         /*
          * For compatibility with the legacy xen toolstack, default to pygrub
@@ -563,6 +553,15 @@ libxlMakeDomBuildInfo(virDomainDefPtr def,
             }
         }
     }
+    /*
+     * The following comment and calculation were taken directly from
+     * libxenlight's internal function libxl_get_required_shadow_memory():
+     *
+     * 256 pages (1MB) per vcpu, plus 1 page per MiB of RAM for the P2M map,
+     * plus 1 page per MiB of RAM to shadow the resident processes.
+     */
+    b_info->shadow_memkb = 4 * (256 * libxl_bitmap_count_set(&b_info->avail_vcpus) +
+                                2 * (b_info->max_memkb / 1024));
 
     return 0;
 }
-- 
2.5.5

