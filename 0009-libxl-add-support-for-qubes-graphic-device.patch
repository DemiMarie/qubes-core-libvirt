From d095404d4e004328b07f905e5fbf00823f63e437 Mon Sep 17 00:00:00 2001
From: HW42 <hw42@ipsumj.de>
Date: Sat, 22 Apr 2017 08:57:58 +0200
Subject: [PATCH] libxl: add support for qubes graphic device
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Marek Marczykowski-GÃ³recki <marmarek@invisiblethingslab.com>
---
 docs/schemas/domaincommon.rng | 13 +++++++++++
 src/conf/domain_conf.c        | 43 +++++++++++++++++++++++++++++++++++
 src/conf/domain_conf.h        |  5 ++++
 src/libxl/libxl_conf.c        |  9 ++++++++
 src/qemu/qemu_command.c       |  2 ++
 src/qemu/qemu_driver.c        |  2 ++
 src/qemu/qemu_hotplug.c       |  1 +
 src/qemu/qemu_process.c       |  4 ++++
 src/qemu/qemu_validate.c      |  1 +
 src/vmx/vmx.c                 |  1 +
 10 files changed, 81 insertions(+)

diff --git a/docs/schemas/domaincommon.rng b/docs/schemas/domaincommon.rng
index 7acfcc08aa..2a5b93651b 100644
--- a/docs/schemas/domaincommon.rng
+++ b/docs/schemas/domaincommon.rng
@@ -3607,6 +3607,19 @@
           </optional>
           <ref name="listenElements"/>
         </group>
+        <group>
+          <attribute name="type">
+            <value>qubes</value>
+          </attribute>
+          <attribute name="domain">
+            <text/>
+          </attribute>
+          <optional>
+            <attribute name="log_level">
+              <data type="integer"/>
+            </attribute>
+          </optional>
+        </group>
         <group>
           <attribute name="type">
             <value>spice</value>
diff --git a/src/conf/domain_conf.c b/src/conf/domain_conf.c
index 61fdca36bf..6edd131b1b 100644
--- a/src/conf/domain_conf.c
+++ b/src/conf/domain_conf.c
@@ -840,6 +840,7 @@ VIR_ENUM_IMPL(virDomainGraphics,
               "vnc",
               "rdp",
               "desktop",
+              "qubes",
               "spice",
               "egl-headless",
 );
@@ -1816,6 +1817,10 @@ void virDomainGraphicsDefFree(virDomainGraphicsDefPtr def)
         VIR_FREE(def->data.desktop.display);
         break;
 
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
+        VIR_FREE(def->data.qubes_gui.domain);
+        break;
+
     case VIR_DOMAIN_GRAPHICS_TYPE_SPICE:
         VIR_FREE(def->data.spice.rendernode);
         VIR_FREE(def->data.spice.keymap);
@@ -14585,6 +14590,30 @@ virDomainGraphicsDefParseXMLDesktop(virDomainGraphicsDefPtr def,
     return 0;
 }
 
+static int virDomainGraphicsDefParseXMLQubes(virDomainGraphicsDefPtr def,
+                                             xmlNodePtr node)
+{
+    int ret = -1;
+    char *log_level = virXMLPropString(node, "log_level");
+
+    if (log_level) {
+        if (virStrToLong_i(log_level, NULL, 10,
+                           &def->data.qubes_gui.log_level) < 0) {
+            virReportError(VIR_ERR_INTERNAL_ERROR,
+                           _("cannot parse Qubes GUI log_level %s"), log_level);
+            goto error;
+        }
+    } else {
+        def->data.qubes_gui.log_level = 0;
+    }
+
+    def->data.qubes_gui.domain = virXMLPropString(node, "domain");
+
+    ret = 0;
+ error:
+    VIR_FREE(log_level);
+    return ret;
+}
 
 static int
 virDomainGraphicsDefParseXMLSpice(virDomainGraphicsDefPtr def,
@@ -14958,6 +14987,10 @@ virDomainGraphicsDefParseXML(virDomainXMLOptionPtr xmlopt,
         if (virDomainGraphicsDefParseXMLDesktop(def, node) < 0)
             goto error;
         break;
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
+        if (virDomainGraphicsDefParseXMLQubes(def, node) < 0)
+            goto error;
+        break;
     case VIR_DOMAIN_GRAPHICS_TYPE_SPICE:
         if (virDomainGraphicsDefParseXMLSpice(def, node, ctxt, flags) < 0)
             goto error;
@@ -28170,6 +28203,14 @@ virDomainGraphicsDefFormat(virBufferPtr buf,
 
         break;
 
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
+        if (def->data.qubes_gui.domain)
+            virBufferEscapeString(buf, " domain='%s'",
+                                  def->data.qubes_gui.domain);
+        virBufferAsprintf(buf, " log_level='%d'",
+                          def->data.qubes_gui.log_level);
+        break;
+
     case VIR_DOMAIN_GRAPHICS_TYPE_SPICE:
         if (!glisten) {
             virReportError(VIR_ERR_INTERNAL_ERROR, "%s",
@@ -32698,6 +32739,7 @@ virDomainGraphicsDefHasOpenGL(const virDomainDef *def)
         switch (graphics->type) {
         case VIR_DOMAIN_GRAPHICS_TYPE_VNC:
         case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+        case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
         case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
             continue;
         case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
@@ -32750,6 +32792,7 @@ virDomainGraphicsGetRenderNode(const virDomainGraphicsDef *graphics)
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_VNC:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
         break;
diff --git a/src/conf/domain_conf.h b/src/conf/domain_conf.h
index 1f9addadc4..52b74a3a93 100644
--- a/src/conf/domain_conf.h
+++ b/src/conf/domain_conf.h
@@ -1526,6 +1526,7 @@ typedef enum {
     VIR_DOMAIN_GRAPHICS_TYPE_VNC,
     VIR_DOMAIN_GRAPHICS_TYPE_RDP,
     VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP,
+    VIR_DOMAIN_GRAPHICS_TYPE_QUBES,
     VIR_DOMAIN_GRAPHICS_TYPE_SPICE,
     VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS,
 
@@ -1706,6 +1707,10 @@ struct _virDomainGraphicsDef {
             virTristateBool gl;
             char *rendernode;
         } spice;
+        struct {
+            char *domain;
+            int log_level;
+        } qubes_gui;
         struct {
             char *rendernode;
         } egl_headless;
diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
index 98342bf279..e639563261 100644
--- a/src/libxl/libxl_conf.c
+++ b/src/libxl/libxl_conf.c
@@ -1553,6 +1553,9 @@ libxlMakeVfb(virPortAllocatorRangePtr graphicsports,
         case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
         case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
             break;
+        case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
+            libxl_defbool_set(&x_vfb->vnc.enable, false);
+            libxl_defbool_set(&x_vfb->sdl.enable, false);
     }
 
     return 0;
@@ -1631,6 +1634,12 @@ libxlMakeBuildInfoVfb(virPortAllocatorRangePtr graphicsports,
         unsigned short port;
         virDomainGraphicsListenDefPtr glisten = NULL;
 
+        if (l_vfb->type == VIR_DOMAIN_GRAPHICS_TYPE_QUBES) {
+            libxl_defbool_set(&b_info->u.hvm.qubes_gui.enable, true);
+            b_info->u.hvm.qubes_gui.domname = g_strdup(l_vfb->data.qubes_gui.domain);
+            b_info->u.hvm.qubes_gui.log_level = l_vfb->data.qubes_gui.log_level;
+        }
+
         if (l_vfb->type != VIR_DOMAIN_GRAPHICS_TYPE_SPICE)
             continue;
 
diff --git a/src/qemu/qemu_command.c b/src/qemu/qemu_command.c
index 839c93bfb4..0c7912f16c 100644
--- a/src/qemu/qemu_command.c
+++ b/src/qemu/qemu_command.c
@@ -7929,6 +7929,7 @@ qemuBuildGraphicsCommandLine(virQEMUDriverConfigPtr cfg,
                 return -1;
 
             break;
+        case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
         case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
         case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
             return -1;
@@ -9753,6 +9754,7 @@ qemuBuildCommandLineValidate(virQEMUDriverPtr driver,
             break;
         case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
         case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
+        case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
         case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
             break;
         }
diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 0ad6359102..8d224013d6 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -18792,6 +18792,7 @@ qemuDomainOpenGraphics(virDomainPtr dom,
         break;
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
         virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
@@ -18861,6 +18862,7 @@ qemuDomainOpenGraphicsFD(virDomainPtr dom,
         break;
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
         virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
diff --git a/src/qemu/qemu_hotplug.c b/src/qemu/qemu_hotplug.c
index 26912334d2..f4175f244b 100644
--- a/src/qemu/qemu_hotplug.c
+++ b/src/qemu/qemu_hotplug.c
@@ -4185,6 +4185,7 @@ qemuDomainChangeGraphics(virQEMUDriverPtr driver,
 
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
         virReportError(VIR_ERR_INTERNAL_ERROR,
diff --git a/src/qemu/qemu_process.c b/src/qemu/qemu_process.c
index ec6ca14bbd..11d98eb1aa 100644
--- a/src/qemu/qemu_process.c
+++ b/src/qemu/qemu_process.c
@@ -4665,6 +4665,7 @@ qemuProcessGraphicsReservePorts(virDomainGraphicsDefPtr graphics,
 
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
     case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
@@ -4704,6 +4705,7 @@ qemuProcessGraphicsAllocatePorts(virQEMUDriverPtr driver,
 
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
     case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
@@ -4860,6 +4862,7 @@ qemuProcessGraphicsSetupListen(virQEMUDriverPtr driver,
 
     case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
     case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
     case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
@@ -5164,6 +5167,7 @@ qemuProcessStartValidateGraphics(virDomainObjPtr vm)
 
         case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
         case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+        case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
         case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
         case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
         case VIR_DOMAIN_GRAPHICS_TYPE_LAST:
diff --git a/src/qemu/qemu_validate.c b/src/qemu/qemu_validate.c
index 488f258d00..ca579774fd 100644
--- a/src/qemu/qemu_validate.c
+++ b/src/qemu/qemu_validate.c
@@ -3389,6 +3389,7 @@ qemuValidateDomainDeviceDefGraphics(const virDomainGraphicsDef *graphics,
 
         break;
     case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+    case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
     case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
         virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
                        _("unsupported graphics type '%s'"),
diff --git a/src/vmx/vmx.c b/src/vmx/vmx.c
index a123a8807c..4a72d23dbc 100644
--- a/src/vmx/vmx.c
+++ b/src/vmx/vmx.c
@@ -3306,6 +3306,7 @@ virVMXFormatConfig(virVMXContext *ctx, virDomainXMLOptionPtr xmlopt, virDomainDe
 
           case VIR_DOMAIN_GRAPHICS_TYPE_SDL:
           case VIR_DOMAIN_GRAPHICS_TYPE_RDP:
+          case VIR_DOMAIN_GRAPHICS_TYPE_QUBES:
           case VIR_DOMAIN_GRAPHICS_TYPE_DESKTOP:
           case VIR_DOMAIN_GRAPHICS_TYPE_SPICE:
           case VIR_DOMAIN_GRAPHICS_TYPE_EGL_HEADLESS:
-- 
2.37.3

